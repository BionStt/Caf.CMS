@model AddressModel
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)")
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        ddlStates.trigger("change");
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                    }
                });
            });
        });
    </script>
}
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.FirstNameEnabled)
@Html.HiddenFor(model => model.FirstNameRequired)
@Html.HiddenFor(model => model.LastNameEnabled)
@Html.HiddenFor(model => model.LastNameRequired)
@Html.HiddenFor(model => model.EmailEnabled)
@Html.HiddenFor(model => model.EmailRequired)
@Html.HiddenFor(model => model.ValidateEmailAddress)
@Html.HiddenFor(model => model.CompanyEnabled)
@Html.HiddenFor(model => model.CompanyRequired)
@Html.HiddenFor(model => model.CountryEnabled)
@Html.HiddenFor(model => model.StateProvinceEnabled)
@Html.HiddenFor(model => model.CityEnabled)
@Html.HiddenFor(model => model.CityRequired)
@Html.HiddenFor(model => model.StreetAddressEnabled)
@Html.HiddenFor(model => model.StreetAddressRequired)
@Html.HiddenFor(model => model.StreetAddress2Enabled)
@Html.HiddenFor(model => model.StreetAddress2Required)
@Html.HiddenFor(model => model.ZipPostalCodeEnabled)
@Html.HiddenFor(model => model.ZipPostalCodeRequired)
@Html.HiddenFor(model => model.PhoneEnabled)
@Html.HiddenFor(model => model.PhoneRequired)
@Html.HiddenFor(model => model.FaxEnabled)
@Html.HiddenFor(model => model.FaxRequired)
<div class="form-body">
    @if (Model.FirstNameEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">   @Html.LangLabelFor(model => model.FirstName)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>
    }
    @if (Model.LastNameEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.LastName)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>
    }
    @if (Model.EmailEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.Email)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
    }
    @if (Model.ValidateEmailAddress && Model.EmailEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.EmailMatch)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.EmailMatch, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmailMatch)
            </div>
        </div>
    }
    @if (Model.CompanyEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.Company)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.Company, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Company)
            </div>
        </div>
    }
    @if (Model.CountryEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.CountryId)</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, T("Admin.Address.SelectCountry").Text, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId)
            </div>
        </div>
    }
    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.StateProvinceId)</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateProvinceId)
            </div>
        </div>
    }
    @if (Model.CityEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.City)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>
    }
    @if (Model.StreetAddressEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.Address1)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.Address1, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address1)
            </div>
        </div>
    }
    @if (Model.StreetAddress2Enabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.Address2)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.Address2, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.ZipPostalCode)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.ZipPostalCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ZipPostalCode)
            </div>
        </div>
    }
    @if (Model.PhoneEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.PhoneNumber)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber)
            </div>
        </div>
    }
    @if (Model.FaxEnabled)
    {
        <div class="form-group">
            <label class="control-label col-md-3">  @Html.LangLabelFor(model => model.FaxNumber)</label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => Model.FaxNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FaxNumber)
            </div>
        </div>
    }
</div>

