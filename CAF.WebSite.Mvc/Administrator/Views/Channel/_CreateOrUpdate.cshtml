@model ChannelModel
@{
    var extendedAttributes = Model.AvailableExtendedAttributes.Select(x => x.Value).ToArray();
    for (int i = 0; i < extendedAttributes.Length; i++)
    {
        extendedAttributes[i] = extendedAttributes[i].EncodeJsString();
    }
    ViewBag.SerializedExtendedAttributes = String.Join(",", extendedAttributes);
    if (!string.IsNullOrEmpty(Model.ExtendedAttributes))
    {
        ViewBag.SerializedChooseExtendedAttributes = String.Join(",", Model.ExtendedAttributes);
    }
}
<script type="text/javascript">
    $(document).ready(function () {

        var tagChooser = $("#@Html.FieldIdFor(x => x.ExtendedAttributes)");
        tagChooser.multiSelect();

    });
</script>
@Html.HiddenFor(model => model.Id)
<div class="form-body">
    <h2 class="margin-bottom-20">  @Html.ValidationSummary(true)</h2>

    <div class="form-group">
        <label class="control-label col-md-3">
            @Html.LangLabelFor(model => model.Name)
        </label>
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name)

        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3">
            @Html.LangLabelFor(model => model.Title)
        </label>
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title)

        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3">
            @Html.LangLabelFor(model => model.ModelTemplateId)
        </label>
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.ModelTemplateId, Model.AvailableModelTemplates, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ModelTemplateId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3">
            @Html.LangLabelFor(model => model.DetailModelTemplateId)
        </label>
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.DetailModelTemplateId, Model.AvailableDetailModelTemplates, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DetailModelTemplateId)
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-3">
            @Html.LangLabelFor(model => model.ExtendedAttributes)
        </label>
        <div class="col-md-3">
            <select name="@Html.FieldIdFor(x => x.ExtendedAttributes)" id="@Html.FieldIdFor(x => x.ExtendedAttributes)" class="form-control multi-select" multiple="multiple">
                @foreach (var caValue in Model.AvailableExtendedAttributes)
                {
                    <option @(caValue.Selected ? " selected" : "") value="@caValue.Value">
                        @caValue.Text
                    </option>
                }
            </select>
            @*@Html.DropDownListFor(model => model.ExtendedAttributes, Model.AvailableExtendedAttributes, new { @class = "form-control multi-select", multiple = "multiple" })*@
            @Html.ValidationMessageFor(model => model.ExtendedAttributes)
        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-md-3">
            @Html.LangLabelFor(model => model.DisplayOrder) <span class="required" aria-required="true">*</span>
        </label>
        <div class="col-md-3">
            @Html.EditorFor(model => model.DisplayOrder)
            @Html.ValidationMessageFor(model => model.DisplayOrder)

        </div>
    </div>
</div>
